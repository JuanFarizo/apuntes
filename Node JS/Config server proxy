### Referencias
* [Setup host name digitalocean](#https://www.digitalocean.com/community/tutorials/how-to-set-up-a-host-name-with-digitalocean)
* [Instalar Nodejs en ubuntu](#https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-an-ubuntu-14-04-server)
* [Setup Node App for production](#https://www.digitalocean.com/community/tutorials/how-to-set-up-a-node-js-application-for-production-on-ubuntu-14-04)
* [vps gratis amazon](#http://marcecastro.com/como-conseguir-un-servidor-vps-gratis-con-amazon-windows-o-linux/)

### Instalacion Nodejs en UBUNTU 

InstalaciÃ³n simple pero con el detalle de que node se ejecuta como nodejs
```sudo apt-get update
sudo apt-get install nodejs
sudo apt-get install npm
sudo apt-get install git```

### Instalacion con Node Version Manager (Opcional si deseamos controlar la version de nodejs en que ejecutamos cada app) -> Si es que queremos controlar las versiones de nodejs que tenemos en cada app
```sudo apt-get remove nodejs
		
sudo apt-get install build-essential libssl-dev
	
Ir a https://github.com/creationix/nvm

curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.30.1/install.sh | bash

source ~/.profile

nvm ls-remote
nvm install 5.3.0
nvm use 4.2.4
nvm ls
```
### Configurar un Servidor Proxy -> Para lo cual instalamos Nginx
[Documentacion DO](#https://www.digitalocean.com/community/tutorials/how-to-set-up-a-node-js-application-for-production-on-ubuntu-14-04)
#### Entendiendo que tenemos el siguiente esquema
**User** -- httt://algo.com	 --> **Web Server** (Reverse Proxy) --Private Ip--> **App Server** (Private Network donde esta la App Node.js)
				
```sudo apt-get update
sudo apt-get install nginx
sudo vi /etc/nginx/sites-available/default
```
Ahora podemos editar el default configuration file en el bloque de server:
Si tenemos dominio debemos cambiar server_name a su nombre o sino poner la direccion de IP
```
	server {
	    listen 80;

	    server_name example.com;

	    location / {
	        proxy_pass http://APP_PRIVATE_IP_ADDRESS:3000; //Si la app esta siendo usada en otro puerto se cambia en esta linea
	        proxy_http_version 1.1;
	        proxy_set_header Upgrade $http_upgrade;
	        proxy_set_header Connection 'upgrade';
	        proxy_set_header Host $host;
	        proxy_cache_bypass $http_upgrade;
	    }
	}
```
(Si llegamos a tener otra Node.js app podriamos agregar otro bloque de Locatiolocation \ {...})

Lo que hace es un reverse proxy en el servidor web hacia el note app en el app server. Esto significa que si alguien accede a nuestra web en un browser el request es enviado al ip privado del servidor de la app quien lo recibe y contesta la peticion
```
sudo service nginx restart
sudo iptables -t nat -A PREROUTING -i eth0 -p tcp --dport 80 -j REDIRECT --to-port 3000
pm2 start archivo.js --watch
```

### Matar procesos
	https://amatellanes.wordpress.com/2013/08/08/ubuntu-como-encontrar-y-matar-un-proceso-que-esta-usando-un-puerto-en-ubuntu/
	sudo netstat -lpn | grep :3000
	kill num_proceso